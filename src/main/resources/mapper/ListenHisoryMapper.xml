<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 听歌历史(listen_hisory) -->
<mapper namespace="com.lots.lotswxxw.dao.ListenHisoryDao">
    <!-- 字段映射 -->
    <resultMap id="listenHisoryMap" type="com.lots.lotswxxw.domain.po.ListenHisoryEntity">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="song_name" property="songName" jdbcType="VARCHAR" />
        <result column="singer" property="singer" jdbcType="VARCHAR" />
        <result column="song_score" property="songScore" jdbcType="INTEGER" />
        <result column="user_id" property="userId" jdbcType="VARCHAR" />
        <result column="creat_time" property="creatTime" jdbcType="TIMESTAMP" />
        <result column="song_id" property="songId" jdbcType="BIGINT" />
    </resultMap>
    
    <!-- 表查询字段 -->
    <sql id="allColumns">
        id, song_name, song_score, user_id, creat_time, singer, song_id
    </sql>
    
    <!-- 查询所有数据 -->
    <select id="findListenHisoryAll" resultMap="listenHisoryMap">
        SELECT
        *
        FROM listen_hisory where user_id='283135753'
    </select>
    
    <!-- 根据条件参数查询数据列表 -->
    <select id="findListenHisoryByCondition" resultMap="listenHisoryMap" parameterType="map">
        SELECT
        <include refid="allColumns" />
        FROM listen_hisory WHERE 1 = 1
        <if test="songName != null and songName != ''">
            AND song_name LIKE CONCAT('%', #{songName}, '%')
        </if>
        <if test="songScore != null">
            AND song_score = #{songScore}
        </if>
        <if test="userId != null and userId != ''">
            AND user_id LIKE CONCAT('%', #{userId}, '%')
        </if>
        <if test="creatTime != null">
            AND creat_time = #{creatTime}
        </if>
    </select>
    

    
    <!-- 插入数据 -->
    <insert id="insertListenHisory" parameterType="map">
        INSERT INTO listen_hisory (
            id, song_name, song_score, user_id, creat_time, singer, song_id
        ) VALUES (
            #{id},
            #{songName},
            #{songScore},
            #{userId},
            #{creatTime},
            #{singer},
            #{songId}
        )
    </insert>
    
    <!-- 批量插入数据 -->
    <insert id="insertListenHisorys" parameterType="list">
        INSERT INTO listen_hisory (
            id, song_name, song_score, user_id, creat_time, song_id
        ) VALUES
        <foreach collection="list" index="index" item="item" separator=",">
            (
                #{item.id},
                #{item.songName},
                #{item.songScore},
                #{item.userId},
                #{item.creatTime},
                #{item.singer},
                #{item.songId}
            )
        </foreach>
    </insert>
    

    
    <!-- 根据主键删除数据 -->
    <delete id="deleteListenHisoryById" parameterType="int">
        DELETE FROM listen_hisory WHERE id = #{id}
    </delete>
    
    <!-- 根据主键批量删除数据 -->
    <delete id="deleteListenHisoryByIds" parameterType="list">
        DELETE FROM listen_hisory WHERE id IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="findByName" resultType="int" parameterType="map">
        select count(*) from listen_hisory a where a.song_name=#{songName} and a.singer=#{singer} and user_id=#{userId}
    </select>
</mapper>